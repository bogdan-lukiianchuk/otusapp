spring.datasource.url=jdbc:postgresql://localhost:5432/order_db
spring.datasource.username=postgres
spring.datasource.password=postgres
server.port=8085
otusapp.billing.base-url=http://localhost:8080/api/accounts
#kafka
spring.kafka.bootstrap-servers={kafka-server}
spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.listener.ack-mode=manual
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=0
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
spring.kafka.producer.enable.idempotence=true
spring.kafka.listener.missing-topics-fatal=false
kafka.enable=false
kafka.producer.send.timeout.sec=5
kafka.topic.email.task=email-task
#metrics
jwt.secret=XLqmshiYH9lzhWROHGzGscTDZmBigwqiqB135aiT9R+sTTCXDu+axuaZBKMHgwEATlXcRq0nhRlfvQambcDQ4g==
management.endpoint.metrics.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true
#flyway
spring.flyway.url=${spring.datasource.url}
spring.flyway.user=${spring.datasource.username}
spring.flyway.password=${spring.datasource.password}
spring.flyway.schemas=public
spring.flyway.locations=classpath:/db/migration
